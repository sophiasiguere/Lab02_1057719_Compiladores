Terminals unused in grammar

   boolean


Grammar

    0 $accept: lines $end

    1 lines: lines expr '\n'
    2      | lines '\n'
    3      | lines errorr '\n'
    4      | /* empty */

    5 errorr: ERROR

    6 expr: expr OR term
    7     | term

    8 term: term AND factor
    9     | factor

   10 factor: NOT factor
   11       | '(' expr ')'
   12       | TRUE
   13       | FALSE


Terminals, with rules where they appear

$end (0) 0
'\n' (10) 1 2 3
'(' (40) 11
')' (41) 11
error (256)
AND (258) 8
OR (259) 6
NOT (260) 10
TRUE (261) 12
FALSE (262) 13
boolean (263)
ERROR (264) 5


Nonterminals, with rules where they appear

$accept (13)
    on left: 0
lines (14)
    on left: 1 2 3 4, on right: 0 1 2 3
errorr (15)
    on left: 5, on right: 3
expr (16)
    on left: 6 7, on right: 1 6 11
term (17)
    on left: 8 9, on right: 6 7 8
factor (18)
    on left: 10 11 12 13, on right: 8 9 10


state 0

    0 $accept: . lines $end

    $default  reduce using rule 4 (lines)

    lines  go to state 1


state 1

    0 $accept: lines . $end
    1 lines: lines . expr '\n'
    2      | lines . '\n'
    3      | lines . errorr '\n'

    $end   shift, and go to state 2
    NOT    shift, and go to state 3
    TRUE   shift, and go to state 4
    FALSE  shift, and go to state 5
    ERROR  shift, and go to state 6
    '\n'   shift, and go to state 7
    '('    shift, and go to state 8

    errorr  go to state 9
    expr    go to state 10
    term    go to state 11
    factor  go to state 12


state 2

    0 $accept: lines $end .

    $default  accept


state 3

   10 factor: NOT . factor

    NOT    shift, and go to state 3
    TRUE   shift, and go to state 4
    FALSE  shift, and go to state 5
    '('    shift, and go to state 8

    factor  go to state 13


state 4

   12 factor: TRUE .

    $default  reduce using rule 12 (factor)


state 5

   13 factor: FALSE .

    $default  reduce using rule 13 (factor)


state 6

    5 errorr: ERROR .

    $default  reduce using rule 5 (errorr)


state 7

    2 lines: lines '\n' .

    $default  reduce using rule 2 (lines)


state 8

   11 factor: '(' . expr ')'

    NOT    shift, and go to state 3
    TRUE   shift, and go to state 4
    FALSE  shift, and go to state 5
    '('    shift, and go to state 8

    expr    go to state 14
    term    go to state 11
    factor  go to state 12


state 9

    3 lines: lines errorr . '\n'

    '\n'  shift, and go to state 15


state 10

    1 lines: lines expr . '\n'
    6 expr: expr . OR term

    OR    shift, and go to state 16
    '\n'  shift, and go to state 17


state 11

    7 expr: term .
    8 term: term . AND factor

    AND  shift, and go to state 18

    $default  reduce using rule 7 (expr)


state 12

    9 term: factor .

    $default  reduce using rule 9 (term)


state 13

   10 factor: NOT factor .

    $default  reduce using rule 10 (factor)


state 14

    6 expr: expr . OR term
   11 factor: '(' expr . ')'

    OR   shift, and go to state 16
    ')'  shift, and go to state 19


state 15

    3 lines: lines errorr '\n' .

    $default  reduce using rule 3 (lines)


state 16

    6 expr: expr OR . term

    NOT    shift, and go to state 3
    TRUE   shift, and go to state 4
    FALSE  shift, and go to state 5
    '('    shift, and go to state 8

    term    go to state 20
    factor  go to state 12


state 17

    1 lines: lines expr '\n' .

    $default  reduce using rule 1 (lines)


state 18

    8 term: term AND . factor

    NOT    shift, and go to state 3
    TRUE   shift, and go to state 4
    FALSE  shift, and go to state 5
    '('    shift, and go to state 8

    factor  go to state 21


state 19

   11 factor: '(' expr ')' .

    $default  reduce using rule 11 (factor)


state 20

    6 expr: expr OR term .
    8 term: term . AND factor

    AND  shift, and go to state 18

    $default  reduce using rule 6 (expr)


state 21

    8 term: term AND factor .

    $default  reduce using rule 8 (term)
